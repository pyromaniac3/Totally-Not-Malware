// Starter code provided by https://github.com/tanhauhau/browser-pet/tree/master
const position = {
    x: 0,
    y: 0,
};

function updatePosition(pet, x, y) {
  pet.style.left = (position.x = x) + 'px';
  pet.style.top = (position.y = y) + 'px'; 
}

function random(max) {
  return Math.floor(Math.random() * max);
}

function lerp(start, end, amt) {
  const lerpedX = (1 - amt) * start.x + amt * end.x;
  const lerpedY = (1 - amt) * start.y + amt * end.y;
  return {x: lerpedX, y: lerpedY };
 }

function spawnFood(foodElement, petElement) {
  console.log("Spawn food");
  document.body.appendChild(foodElement);
  const screenWidth = window.innerWidth;
  const screenHeight = window.innerHeight;

  const randX = random(screenWidth);
  const randY = random(screenHeight);

  console.log("Food pos X = " + randX);
  console.log("Food pos Y = " + randY);

  foodElement.style.transform = `translate(${randX}px, ${randY}px)`;

  const foodPos = { x: randX, y: randY};
  const catPos = { x: position.x, y: position.y };

  let i = 0;
  const interval = setInterval(() => {
    const lerpedPosition = lerp(catPos, foodPos, i);
    updatePosition(petElement, lerpedPosition.x, lerpedPosition.y);
    i += 0.002;

    if (i >= 1) {
      clearInterval(interval);
      document.body.removeChild(foodElement);
    }
  })
}
function onload() {
  //create pet
    const pet = document.createElement('div');
    pet.classList.add('meowware-pet');
    document.body.appendChild(pet);

  //create food
    const food = document.createElement('div');
    food.classList.add('meowware-food');

    document.getElementById('feedMe').addEventListener('click', function() {
      console.log('Feed Button clicked!');
      spawnFood(food, pet);
    });
/*
  function playButtonClick() {
      console.log('Play Button clicked!');
  }

  function fakeQuitButtonClick() {
      console.log('Fake Quit Button clicked!');
      window.close();
  }
  */
}
window.addEventListener('load', onload);