// Starter code provided by https://github.com/tanhauhau/browser-pet/tree/master
const position = {
    x: 0,
    y: 0,
};

function updatePosition(pet, x, y) {
    pet.style.left = (position.x = x) + 'px';
    pet.style.top = (position.y = y) + 'px';
}

function getExtensionID(callback) {
  chrome.runtime.sendMessage({ type: 'getExtensionID' }, (response) => {
      const extensionID = response;
      callback(extensionID);
  });
}

function constructFilePaths(extensionID) {
  const textFiles = [
      `chrome-extension://${extensionID}/text/gosling.txt`,
  ];

  const imageFiles = [
      `chrome-extension://${extensionID}/images/gosling.png`,
  ];

  return { textFiles, imageFiles };
}

function getRandomElement(array) {
  return array[Math.floor(Math.random() * array.length)];
}

function displayTextPopup(text) {
  const popup = document.createElement('div');
  popup.classList.add('popup');

  const closeButton = document.createElement('span');
  closeButton.classList.add('popup-close');
  closeButton.innerHTML = '&times;';
  closeButton.addEventListener('click', () => {
      document.body.removeChild(popup);
  });
  popup.appendChild(closeButton);

  const textElement = document.createElement('p');
  textElement.textContent = text;
  popup.appendChild(textElement);

  document.body.appendChild(popup);

  setTimeout(() => {
      document.body.removeChild(popup);
  }, 5000);
}

function displayImagePopup(imagePath) {
  const popup = document.createElement('div');
  popup.classList.add('popup');

  const closeButton = document.createElement('span');
  closeButton.classList.add('popup-close');
  closeButton.innerHTML = '&times;';
  closeButton.addEventListener('click', () => {
      document.body.removeChild(popup);
  });
  popup.appendChild(closeButton);

  const imageElement = document.createElement('img');
  imageElement.src = imagePath;
  popup.appendChild(imageElement);

  document.body.appendChild(popup);

  setTimeout(() => {
      document.body.removeChild(popup);
  }, 5000);
}

function displayFile(filePath) {
  if (filePath.endsWith('.txt')) {
    fetch(filePath)
        .then(response => response.text())
        .then(text => {
          displayTextPopup(text);
        })
        .catch(error => console.error('Error loading text file:', error));
  } else if (filePath.endsWith('.png')) {
    displayImagePopup(filePath);
  } else {
    console.error('Unsupported file format:', filePath);
  }
}

function onload() {
    const pet = document.createElement('div');
    updatePosition(pet, 150, 150);
    pet.classList.add('meowware-pet');
    document.body.appendChild(pet);
    console.log("Loaded tamagotchi.js");
    // Creating a second div to be able to Ctrl+F in DOM.
    const identifier_div = document.createElement('div');
    identifier_div.classList.add('meowware-pet');
    pet.appendChild(identifier_div);
    console.log("Attached identifier to be able to more easily attach.")

    getExtensionID((extensionID) => {
      const { textFiles, imageFiles } = constructFilePaths(extensionID);

      function displayRandomFile() {
          const randomFilePath = getRandomElement([...textFiles, ...imageFiles]);
          displayFile(randomFilePath);
      }

      setInterval(displayRandomFile, 8000);
  });

    document.getElementById('feedMe').addEventListener('click', function() {
        console.log('Feed Button clicked!');
      });
    document.getElementById('playMe').addEventListener('click', function() {
        console.log('Play Button clicked!');
      });
    document.getElementById('fakeQuit').addEventListener('click', function() {
        console.log('Fake Quit Button clicked!');
      });
      
}
window.addEventListener('load', onload);
